{"version":3,"sources":["components/Emoji.jsx","components/Search.jsx","App.js","index.js"],"names":["Emoji","emojiToClipboard","e","copyText","target","closest","querySelector","textArea","document","createElement","value","textContent","body","appendChild","select","setSelectionRange","execCommand","remove","alert","innerText","className","this","props","title","symbol","keywords","Component","Search","filterByKeywords","event","searchTerm","toLowerCase","temp","emojiList","filter","item","includes","map","i","push","setState","filteredList","searchResults","length","state","Fragment","placeholder","type","onChange","ele","key","App","path","React","ReactDOM","render","getElementById"],"mappings":"wTAGqBA,G,iNACnBC,iBAAmB,SAAAC,GACjB,IAAIC,EAAWD,EAAEE,OAAOC,QAAQ,cAAcC,cAAc,YAExDC,EAAWC,SAASC,cAAc,YACtCF,EAASG,MAAQP,EAASQ,YAC1BH,SAASI,KAAKC,YAAYN,GAC1BA,EAASO,SACTP,EAASQ,kBAAkB,EAAG,OAC9BP,SAASQ,YAAY,QACrBT,EAASU,SAETC,MAAM,GAAD,OAAIf,EAASgB,UAAb,2B,wEAIL,OACE,yBAAKC,UAAU,YACb,6BACE,4BACGC,KAAKC,MAAMC,MACZ,0BAAMH,UAAU,WAAWC,KAAKC,MAAME,SAExC,2BAAIH,KAAKC,MAAMG,UACf,yBAAKL,UAAU,YACb,4BAAQA,UAAU,YAAlB,e,GAzBuBM,cCEdC,E,YACnB,WAAYL,GAAQ,IAAD,8BACjB,4CAAMA,KAQRM,iBAAmB,SAAAC,GACjB,IAAIC,EAAaD,EAAMzB,OAAOM,MAAMqB,cAChCC,EAAO,GACXC,EACGC,QAAO,SAAAC,GAAI,OAAIA,EAAKV,SAASM,cAAcK,SAASN,MACpDO,KAAI,SAACnC,EAAGoC,GACP,OAAON,EAAKO,KAAKrC,MAGrB,EAAKsC,SAAS,CACZC,aAAcT,EACdU,cAAeV,EAAKW,UAjBtB,EAAKC,MAAQ,CACXH,aAAcR,EACdS,cAAe,GALA,E,sEAwBT,IAAD,OACP,OACE,kBAAC,IAAMG,SAAP,KACE,yBAAKzB,UAAU,iBACb,gDACA,2BACE0B,YAAY,SACZ1B,UAAU,eACV2B,KAAK,OACLC,SAAU3B,KAAKO,mBAGhBP,KAAKuB,MAAMH,aAAaJ,KAAI,SAACY,EAAKX,GACjC,OAAO,EAAKM,MAAMF,cAChB,kBAAC,EAAD,CACEQ,IAAKZ,EACLb,SAAUwB,EAAIxB,SACdF,MAAO0B,EAAI1B,MACXC,OAAQyB,EAAIzB,SAEZ,c,GA7CoBE,aCUrByB,E,iLARX,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,CAAQC,KAAK,W,GAJHC,IAAM3B,WCAxB4B,IAASC,OAAO,kBAAC,EAAD,MAAS/C,SAASgD,eAAe,U","file":"static/js/main.a785d554.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../scss/emoji.scss\";\n\nexport default class Emoji extends Component {\n  emojiToClipboard = e => {\n    let copyText = e.target.closest(\".emoji-box\").querySelector(\".to-copy\");\n\n    let textArea = document.createElement(\"textarea\");\n    textArea.value = copyText.textContent;\n    document.body.appendChild(textArea);\n    textArea.select();\n    textArea.setSelectionRange(0, 99999);\n    document.execCommand(\"Copy\");\n    textArea.remove();\n\n    alert(`${copyText.innerText} sent to clipboard...`);\n  };\n\n  render() {\n    return (\n      <div className=\"emojiBox\">\n        <div>\n          <h1>\n            {this.props.title}\n            <span className=\"to-copy\">{this.props.symbol}</span>\n          </h1>\n          <p>{this.props.keywords}</p>\n          <div className=\"btn-wrap\">\n            <button className=\"myButton\">copy</button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport emojiList from \"../emojiList.json\";\nimport Emoji from \"./Emoji.jsx\";\nimport \"../scss/emoji.scss\";\n\nexport default class Search extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      filteredList: emojiList,\n      searchResults: 0\n    };\n  }\n\n  filterByKeywords = event => {\n    let searchTerm = event.target.value.toLowerCase();\n    let temp = [];\n    emojiList\n      .filter(item => item.keywords.toLowerCase().includes(searchTerm))\n      .map((e, i) => {\n        return temp.push(e);\n      });\n\n    this.setState({\n      filteredList: temp,\n      searchResults: temp.length\n    });\n  };\n\n  render() {\n    return (\n      <React.Fragment>\n        <div className=\"emoji-wrapper\">\n          <i>Search For Emoji:</i>\n          <input\n            placeholder=\"Search\"\n            className=\"autocomplete\"\n            type=\"text\"\n            onChange={this.filterByKeywords}\n          />\n\n          {this.state.filteredList.map((ele, i) => {\n            return this.state.searchResults ? (\n              <Emoji\n                key={i}\n                keywords={ele.keywords}\n                title={ele.title}\n                symbol={ele.symbol}\n              />\n            ) : null;\n          })}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n","import React from \"react\";\nimport \"./App.css\";\nimport { Router } from \"@reach/router\";\nimport Search from \"./components/Search\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <Router>\n        <Search path=\"/\"></Search>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}